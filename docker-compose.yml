version: '3'

services:
  api:
    image: golang:latest
    build:
      context: ./api
      args:
        app_env: ${APP_ENV}
    volumes:
      - ./api:/app
    ports:
      - "5000:8080"
    networks:
      - webnet

  frontend:
    image: node:latest
    build:
      context: ./frontend
      args:
        app_env: ${APP_ENV}
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "3000:3000"
    networks:
      - webnet

  db:
    image: postgres:9
    restart: always
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    networks:
      - webnet

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

networks:
  webnet:
